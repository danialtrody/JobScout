{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\JobScout\\\\frontend\\\\src\\\\pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomePage() {\n  _s();\n  const BASE_URL = \"http://localhost:3000/api/jobs\";\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchJobs = async (keyword = \"developer\", location = \"Israel\") => {\n    try {\n      const response = await fetch(`${BASE_URL}?keyword=${keyword}&location=${location}`);\n      if (!response.ok) throw new Error(\"Failed to fetch jobs\");\n      const data = await response.json();\n      return data; // returns an array of jobs\n    } catch (error) {\n      console.error(error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const getJobs = async () => {\n      setLoading(true);\n      const data = await fetchJobs();\n      setJobs(data);\n      setLoading(false);\n    };\n    getJobs();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading jobs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.link,\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", \"- \", job.company, \" (\", job.location, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomePage","_s","BASE_URL","jobs","setJobs","loading","setLoading","fetchJobs","keyword","location","response","fetch","ok","Error","data","json","error","console","getJobs","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","href","link","title","company","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/JobScout/frontend/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction HomePage() {\r\n  const BASE_URL = \"http://localhost:3000/api/jobs\";\r\n\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchJobs = async (keyword = \"developer\", location = \"Israel\") => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}?keyword=${keyword}&location=${location}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch jobs\");\r\n      const data = await response.json();\r\n      return data; // returns an array of jobs\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getJobs = async () => {\r\n      setLoading(true);\r\n      const data = await fetchJobs();\r\n      setJobs(data);\r\n      setLoading(false);\r\n    };\r\n    getJobs();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading jobs...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Job List</h1>\r\n      <ul>\r\n        {jobs.map((job, index) => (\r\n          <li key={index}>\r\n            <a href={job.link}>\r\n              {job.title}\r\n            </a>{\" \"}\r\n            - {job.company} ({job.location})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAG,gCAAgC;EAEjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,SAAS,GAAG,MAAAA,CAAOC,OAAO,GAAG,WAAW,EAAEC,QAAQ,GAAG,QAAQ,KAAK;IACtE,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,QAAQ,YAAYM,OAAO,aAAaC,QAAQ,EAAE,CAAC;MACnF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAAC,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAO,EAAE;IACX;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,MAAMqB,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1BZ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMQ,IAAI,GAAG,MAAMP,SAAS,CAAC,CAAC;MAC9BH,OAAO,CAACU,IAAI,CAAC;MACbR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDY,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIb,OAAO,EAAE,oBAAON,OAAA;IAAAoB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE1C,oBACExB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA;MAAAoB,QAAA,EACGhB,IAAI,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnB3B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAG4B,IAAI,EAAEF,GAAG,CAACG,IAAK;UAAAT,QAAA,EACfM,GAAG,CAACI;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,EAAC,GAAG,EAAC,IACP,EAACE,GAAG,CAACK,OAAO,EAAC,IAAE,EAACL,GAAG,CAAChB,QAAQ,EAAC,GACjC;MAAA,GALSiB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtB,EAAA,CA7CQD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}